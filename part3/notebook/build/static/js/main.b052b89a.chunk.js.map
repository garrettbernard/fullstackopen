{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","noteService","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","initialNotes","Notification","message","Footer","style","color","fontStyle","fontSize","notesToShow","filter","map","i","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","length","concat","value","onChange","console","log","target","type","ReactDOM","render","document","getElementById"],"mappings":"4KAceA,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,qBAAuB,iBAE3B,OACE,qBAAIC,UAAU,OAAd,UACGJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,Q,gBCRpCK,EAAU,aAwBDC,EANK,CACfC,OAhBU,WAEb,OADgBC,IAAMC,IAAIJ,GACXK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAetCC,OAZU,SAAAC,GAEb,OADgBN,IAAMO,KAAKV,EAASS,GACrBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAWtCI,OARU,SAACC,EAAIH,GAElB,OADgBN,IAAMU,IAAN,UAAab,EAAb,YAAwBY,GAAMH,GAC/BJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UCwG5BO,EApHH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,MAJjC,mBAITO,EAJS,KAIKC,EAJL,KAMhBC,qBAAU,WACRvB,EACGC,SACAG,MAAK,SAAAoB,GACJR,EAASQ,QAEZ,IAEL,IAoBMC,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,qBAAK9B,UAAU,QAAf,SACG8B,KAsBCC,EAAS,WAMf,OACE,sBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACE,uBACA,2GAUEC,EAAcb,EAChBJ,EACAA,EAAMkB,QAAO,SAAAzC,GAAI,OAAIA,EAAKG,aAE9B,OACE,gCACE,uCACA,cAAC8B,EAAD,CAAcC,QAASL,IACvB,8BACE,yBAAQvB,QAAS,kBAAMsB,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGa,EAAYE,KAAI,SAAC1C,EAAM2C,GAAP,OACf,cAAC,EAAD,CAEE3C,KAAMA,EACNC,iBAAkB,kBAtFH,SAAAkB,GACzB,IAAMnB,EAAOuB,EAAMqB,MAAK,SAAAC,GAAC,OAAIA,EAAE1B,KAAOA,KAChC2B,EAAW,2BAAQ9C,GAAR,IAAcG,WAAYH,EAAKG,YAEhDK,EACGU,OAAOC,EAAI2B,GACXlC,MAAK,SAAAmC,GACJvB,EAASD,EAAMmB,KAAI,SAAA1C,GAAI,OAAIA,EAAKmB,KAAOA,EAAKnB,EAAO+C,SAEtDC,OAAM,SAAAC,GACLnB,EAAgB,SAAD,OACJ9B,EAAKK,QADD,sCAGf6C,YAAW,WACTpB,EAAgB,QACf,KACHN,EAASD,EAAMkB,QAAO,SAAAI,GAAC,OAAIA,EAAE1B,KAAOA,SAsEJgC,CAAmBnD,EAAKmB,MAF3CwB,QAMX,uBAAMS,SA1DM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBlD,QAASoB,EACT+B,MAAM,IAAIC,MAAOC,cACjBvD,UAAWwD,KAAKC,SAAW,GAC3BzC,GAAII,EAAMsC,OAAS,GAGrBrD,EACGO,OAAOwC,GACP3C,MAAK,SAAAmC,GACJvB,EAASD,EAAMuC,OAAOf,IACtBrB,EAAW,QA6Cb,UACE,uBACEqC,MAAOtC,EACPuC,SA9BiB,SAACX,GACxBY,QAAQC,IAAIb,EAAMc,OAAOJ,OACzBrC,EAAW2B,EAAMc,OAAOJ,UA8BpB,wBAAQK,KAAK,SAAb,qBAEF,cAACjC,EAAD,Q,MC/GNkC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b052b89a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important\r\n    ? 'make not important' : 'make important'\r\n\r\n  return (\r\n    <li className='note'>\r\n      {note.content}\r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst noteService = {\r\n     getAll,\r\n     create,\r\n     update\r\n};\r\n\r\nexport default noteService;\r\n","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\nconst toggleImportanceOf = id => {\n  const note = notes.find(n => n.id === id)\n  const changedNote = { ...note, important: !note.important }\n\n  noteService\n    .update(id, changedNote)\n    .then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n  })\n  .catch(error => {\n    setErrorMessage(\n      `Note '${note.content}' was already removed from server`\n    )\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 5000)\n    setNotes(notes.filter(n => n.id !== id))\n  })\n}\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: notes.length + 1\n    }\n\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science, University of Helsinki 2021</em>\n    </div>\n  )\n}\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note, i) =>\n          <Note\n            key={i}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}